table(actors)
actors <- reorder(actors,actors,FUN=length)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
length(actors)
actors <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
actors
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
actors
View(actors)
ggplot(actors, aes(x = actors$actors, y = actors$Fxreq)) + theme(axis.text.x = element_text(angle = 60)) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors
actors
actors <- factor(actors)
table(actors)
length(actors)
actors2 <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
actors2
ggplot(actors, aes(x = actors2$actors, y = actors2$Fxreq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = actors2$actors, y = actors2$Fxreq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = actors2$actors, y = actors2$Fxreq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(sort(actors2, decreasing = F), aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors2 <- sort(actors2$Freq, decreasing = F)
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors2 <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
sort(actors2$Freq, decreasing = F)
actors2
actors2
actors2
sort(actors2$Freq, decreasing = F)
actors2
actors2
sort(actors2$Freq, decreasing = F)
sort(actors2$Freq, decreasing = F)
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
sort(actors2$Freq, decreasing = F)
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors2 <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
actors2[with(actors2, order(-Freq)), ]
actors2
actors2[with(actors2, order(Freq)), ]
actors2
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
library(tidyverse)
library(gridExtra)
library(GGally)
library(ggplot2)
knitr::opts_chunk$set(results = 'hold')
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors2 <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
actors2[with(actors2, order(Freq)), ]
actors2
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors2[rev(order(actors2$Freq)),]
actors2
actors2[order(actors2$Freq),]
actors2
actors2 <- as.data.frame(sort(table(actors), decreasing = T)[1:20])
View(actors2)
actors2 <- sort(table(actors), decreasing = T)[1:20]
actors2[order(actors2$Freq),]
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
actors2[order(actors2$Freq),]
actors2
actors2 <- actors2[order(actors2$Freq),]
actors2
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors2
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
actors2
ggplot(actors2, aes(x = actors2$actors, y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors2
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
ggplot(actors2, aes(x = reorder(actors2$actors), y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = actors2$Freq), color="red ") + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
movies <- read.csv("IMDB_movie_dataset.csv", encoding = "UTF-8", stringsAsFactors = F)
movies$movie_title <- gsub("\u00A0", "", movies$movie_title)
head(movies)
str(movies)
movies <- read.csv("IMDB_movie_dataset.csv", encoding = "UTF-8", stringsAsFactors = F)
movies$movie_title <- gsub("\u00A0", "", movies$movie_title)
head(movies)
str(movies)
movies$title_year[is.na(movies$title_year)] <- "unknown"
movies$title_year <- as.factor(movies$title_year)
ggplot(movies, aes(x = title_year, fill = title_year)) + geom_bar() + theme(axis.text.x = element_text(angle = 60)) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(movies, aes(x = title_year, y = gross, fill = title_year)) + geom_bar(stat = "sum") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Total gross", color = "Year", title = "Total gross per year")
movies$language[movies$language == ""] <- "unknown"
movies$language <- as.factor(movies$language)
ggplot(movies[which(movies$language != "English"), ], aes(x = language, fill = language)) + geom_bar() + theme(axis.text.x = element_text(angle = 60)) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Language", y = "Number of movies", color = "Year", title = "Movies by language not in English")
ggplot(movies, aes(x = imdb_score, fill = cut(imdb_score, 100))) + geom_histogram(bins = 10, show.legend = FALSE) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "IMDB score", title = "IMDB score count")
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
actors2
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = actors2$Freq)) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = actors2$Freq, fill = cut(imdb_score, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
```{r, fig.width=10}
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
length(actors)
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
actors2
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors
actors <- factor(actors)
table(actors)
actors <- reorder(actors,actors,FUN=length)
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors <- factor(actors)
actors <- reorder(actors,actors,FUN=length)
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", color = "Year", title = "Number of movies per year")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Year", y = "Number of movies", title = "Top actors")
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Actor", y = "Number of movies", title = "Top actors")
```{r, fig.width=6}
actors <- c(movies$actor_1_name, movies$actor_2_name, movies$actor_3_name)
actors <- actors[nchar(actors) > 1]
actors <- factor(actors)
actors <- reorder(actors,actors,FUN=length)
actors2 <- data.frame(sort(table(actors), decreasing = T)[1:20])
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Actor", y = "Number of movies", title = "Top actors")
str(movies)
ggplot(actors2, aes(x = reorder(actors2$actors, actors2$Freq), y = Freq, fill = cut(Freq, 100))) + theme(axis.text.x = element_text(angle = 60)) + geom_bar(stat = "identity", show.legend = F) + theme(axis.text.x = element_text(angle = 60), plot.title = element_text(hjust = 0.5)) + labs(x = "Actor", y = "Number of movies", title = "Acted in most movies")
install.packages("ggmap")
install.packages("maptools")
devtools::install_github("rstudio/rmarkdown")
Sys.setenv(LANG = "en_US.UTF-8")
Sys.setenv(LANG = "en_HR.UTF-8")
Sys.setenv(ALL = "en_HR.UTF-8")
Sys.setenv(LC_ALL = "en_HR.UTF-8")
Sys.setlocale(locale = "en_HR.UTF-8")
install.packages("tidyverse")
library(tidyverse)
library(stringr)
library(ggplot2)
knitr::opts_chunk$set(results = 'hold')
source("data_reading.R")
setwd("~/Documents/III_Semestar/R")
rm(list = ls())
setwd("~/Documents/III_Semestar/R/ZI_2017")
library(MASS)
library(tidyverse)
library(openintro)
install.packages("openintro")
library(MASS)
library(tidyverse)
library(openintro)
knitr::opts_chunk$set(results = 'hold')
rm(list = ls())    # brišemo postojeće varijable
set.seed(1234)
set.seed(1234)
#
runif(30, 10, 20)
ceil(runif(30, 10, 20))
ceiling(runif(30, 10, 20))
m <- matrix(ceiling(runif(30, 10, 20)), nrow = 5, ncol = 6, byrow = T)
m
apply(m, 1, max)
apply(m, 2, max)
m
apply(m, 2, max)
untidyIris <- read.csv("untidyIris.csv", header = T, stringsAsFactors = F)
untidyIris
View(untidyIris)
setwd("~/Documents/III_Semestar/R")
untidyIris <- gather(untidyIris, FeatureName, FeatureValue, na.rm = T, factor_key = T )
untidyIris
untidyIris <- read.csv("untidyIris.csv", header = T, stringsAsFactors = F)
untidyIris
untidyIris <- read.csv("untidyIris.csv", header = T, stringsAsFactors = F)
untidyIris
untidyIris2 <- gather(untidyIris, FeatureName, FeatureValue, na.rm = T, factor_key = T )
untidyIris2
untidyIris2 <- gather(untidyIris, FeatureName, FeatureValue, FeatureName, na.rm = T, factor_key = T )
untidyIris2
untidyIris <- read.csv("untidyIris.csv", header = T, stringsAsFactors = F)
untidyIris
untidyIris2 <- gather(untidyIris, FeatureName, FeatureValue, FeatureName, na.rm = T, factor_key = T )
untidyIris2
?iris
untidyIris <- read.csv("untidyIris.csv", header = T, stringsAsFactors = F)
untidyIris
untidyIris2 <- spread(untidyIris, FeatureName, FeatureValue)
untidyIris2
View(untidyIris2)
data(marioKart)
head(marioKart)
head(marioKart)
# install.packages("openintro")   # ako je potrebno
#library(openintro)  # ako je potrebno
data(marioKart)
# head, glimpse, summary...
head(marioKart)
summary(marioKart)
glimpse(marioKart)
# install.packages("openintro")   # ako je potrebno
#library(openintro)  # ako je potrebno
data(marioKart)
# head, glimpse, summary...
head(marioKart)
glimpse(marioKart)
glimpse(marioKart)
marioKart[marioKart$cond == "brand new",]
str_detect(marioKart, "brand new")
library(stringr)
str_detect(marioKart, "brand new")
str_detect(marioKart$title, "brand new")
str_detect(marioKart$title, "BRAND NEW")
sum(str_detect(marioKart$title, "BRAND NEW"))
sum(str_detect(marioKart$title, "BRAND NEW"), na.rm = T)
sum(str_detect(marioKart$title, "NEW"), na.rm = T)
sum(str_detect(marioKart$title, "BRAND"), na.rm = T)
sum(str_detect(marioKart$title, "NEW"), na.rm = T)
str_detect(marioKart$title, "BRAND NEW")
marioKart[str_detect(marioKart$title, "BRAND NEW")]
marioKart[, str_detect(marioKart$title, "BRAND NEW")]
library(dplyr)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW"))
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter($sellerRate < 1000)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) -> tempdf
?marioKart
tempdf[, "duration", "nBids", "totalPr"]
tempdf[, c("duration", "nBids", "totalPr")]
mutate(tempdf[, c("duration", "nBids", "totalPr")], totalPrKn = totalPr * 6))
mutate(tempdf[, c("duration", "nBids", "totalPr")], totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000)[, c("duration", "nBids", "totalPr")] -> tempdf
# install.packages("openintro")   # ako je potrebno
#library(openintro)  # ako je potrebno
data(marioKart)
# head, glimpse, summary...
head(marioKart)
glimpse(marioKart)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000)[, c("duration", "nBids", "totalPr")] -> tempdf
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) -> tempdf
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) %>% [, c("duration", "nBids", "totalPr")] -> tempdf
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr] -> tempdf
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = mean(totalPr, na.rm = T)) %>% arrange(asc(duration))
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = mean(totalPr, na.rm = T)) %>% arrange(duration)
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = mean(totalPr, na.rm = T), maxPrice = max(totalPr, na.rm = T)) %>% arrange(duration)
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = max(totalPr, na.rm = T)) %>% arrange(duration)
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = round(max(totalPr, na.rm = T), 2)) %>% arrange(duration)
library(MASS)
library(tidyverse)
library(openintro)
library(stringr)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(results = 'hold')
ggplot(marioKart, aes(x = sellerRate, y = totalPr)) + geom_point()
ggplot(marioKart, aes(x = totalPr, y = sellerRate)) + geom_point()
selected <- filter(marioKart, sellerRate <= 1000 & sellerRate >= 100)
selected
ggplot(filter(marioKart, sellerRate <= 1000 & sellerRate >= 100), aes(x = sellerRate, y = totalPr)) + geom_point()
ggplot(filter(marioKart, sellerRate <= 1000 & sellerRate >= 100), aes(x = sellerRate, y = totalPr, color = cond)) + geom_point()
ggplot(filter(marioKart, sellerRate <= 1000 & sellerRate >= 100), aes(x = sellerRate, y = totalPr, color = cond)) + geom_point() + stat_smooth(method=lm)
ggplot(marioKart) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total Power (kW)")
```{r}
ggplot(marioKart) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total Power (kW)")
ggplot(filter(marioKart, cond == "new")) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total Power (kW)")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total Power (kW)")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr), bins = 5) +
ylab("Total Power (kW)")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, y = totalPr), bins = 5) +
ylab("Total Power (kW)")
, weight=totalPr
, weight=totalPr
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total Power (kW)")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total price")
devtools::install_github("tidyverse/ggplot2")
library(ggplot2)
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total price")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weigth=totalPr), bins = 5) +
ylab("Total price")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weight=totalPr), bins = 5) +
ylab("Total price")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5) +
ylab("Total price")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "used"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
options(warn=-1)
options(warn=-1)
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "used"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "used"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
linMod <- lm(totalPr ~ cond, marioKart)
summary(linMod)
linMod
summary(linMod)
filteredMarioKart <- filter(marioKart, -ID, -title)
filteredMarioKart <- select(marioKart, -ID, -title)
filteredMarioKart
library(MASS)
select(marioKart, -ID, -title)
lm_sve <- lm(totalPr ~ ., data = marioKart)
lm_prazan <- lm(totalPr ~ 1, data = marioKart)
lm1 <- stepAIC(lm_sve, direction = "backward")
summary(lm1)
print("====================================")
print("====================================")
print("====================================")
lm2 <- stepAIC(lm_prazan, direction = "forward", scope = list(upper = lm_sve, lower = lm_prazan))
lm_sve <- lm(totalPr ~ ., data = select(marioKart, -ID, -title))
lm_prazan <- lm(totalPr ~ 1, data = select(marioKart, -ID, -title))
lm1 <- stepAIC(lm_sve, direction = "backward")
summary(lm1)
print("====================================")
print("====================================")
print("====================================")
lm2 <- stepAIC(lm_prazan, direction = "forward", scope = list(upper = lm_sve, lower = lm_prazan))
summary(lm2)
rm(list = ls())    # brišemo postojeće varijable
set.seed(1234)
set.seed(1234)
#
m <- matrix(ceiling(runif(30, 10, 20)), nrow = 5, ncol = 6, byrow = T)
m
apply(m, 2, max)
# prostor za programski kod
untidyIris <- read.csv("untidyIris.csv", header = T, stringsAsFactors = F)
untidyIris
untidyIris <- spread(untidyIris, FeatureName, FeatureValue)
untidyIris <- spread(untidyIris, FeatureName, FeatureValue)
library(MASS)
library(tidyverse)
library(openintro)
library(stringr)
library(dplyr)
library(ggplot2)
library(MASS)
knitr::opts_chunk$set(results = 'hold')
untidyIris <- spread(untidyIris, FeatureName, FeatureValue)
untidyIris2 <- spread(untidyIris, FeatureName, FeatureValue)
# install.packages("openintro")   # ako je potrebno
#library(openintro)  # ako je potrebno
data(marioKart)
# head, glimpse, summary...
head(marioKart)
glimpse(marioKart)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = round(max(totalPr, na.rm = T), 2)) %>% arrange(duration)
ggplot(filter(marioKart, sellerRate <= 1000 & sellerRate >= 100), aes(x = sellerRate, y = totalPr, color = cond)) + geom_point() + stat_smooth(method=lm)
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "used"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
linMod <- lm(totalPr ~ cond, marioKart)
linMod
summary(linMod)
lm_sve <- lm(totalPr ~ ., data = select(marioKart, -ID, -title))
lm_prazan <- lm(totalPr ~ 1, data = select(marioKart, -ID, -title))
lm1 <- stepAIC(lm_sve, direction = "backward")
summary(lm1)
print("====================================")
print("====================================")
print("====================================")
lm2 <- stepAIC(lm_prazan, direction = "forward", scope = list(upper = lm_sve, lower = lm_prazan))
summary(lm2)
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "used"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
marioKart %>% group_by(cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = round(max(totalPr, na.rm = T), 2)) %>% arrange(duration)
marioKart %>% group_by(cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = round(max(totalPr, na.rm = T), 2))
duration,
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = round(max(totalPr, na.rm = T), 2)) %>% arrange(duration)
linMod <- lm(marioKart$totalPr ~ marioKart$cond, marioKart)
linMod
summary(linMod)
View(marioKart)
View(marioKart)
linMod <- lm(totalPr ~ cond, marioKart)
linMod
summary(linMod)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW") | str_detect(marioKart$title, "brand new")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(marioKart$title, "BRAND NEW") | str_detect(marioKart$title, "brand new")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(tolower(marioKart$title), "brand new")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(tolower(marioKart$title), "brand new")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(tolower(marioKart$title), "brand new")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% filter(str_detect(tolower(marioKart$title), "brand new")) %>% filter(sellerRate < 1000) %>% select(title) -> tempdf
tempdf
duration, nBids, totalPr
duration, nBids, totalPr
| str_detect(marioKart$title, "brand new")
# install.packages("openintro")   # ako je potrebno
#library(openintro)  # ako je potrebno
data(marioKart)
# head, glimpse, summary...
head(marioKart)
glimpse(marioKart)
marioKart %>% filter(str_detect(tolower(marioKart$title), "brand new")) %>% filter(sellerRate < 1000) %>% select(duration, nBids, totalPr) -> tempdf
mutate(tempdf, totalPrKn = totalPr * 6)
marioKart %>% group_by(duration, cond) %>% summarise("meanPrice" = round(mean(totalPr, na.rm = T), 2), maxPrice = round(max(totalPr, na.rm = T), 2)) %>% arrange(duration)
ggplot(filter(marioKart, sellerRate <= 1000 & sellerRate >= 100), aes(x = sellerRate, y = totalPr, color = cond, shape = cond)) + geom_point() + stat_smooth(method=lm)
ggplot(filter(marioKart, sellerRate <= 1000 & totalPr <= 100), aes(x = sellerRate, y = totalPr, color = cond, shape = cond)) + geom_point() + stat_smooth(method=lm)
ggplot(filter(marioKart, sellerRate <= 1000 & totalPr <= 100), aes(x = sellerRate, y = totalPr)) + geom_point() + stat_smooth(method=lm)
ggplot(filter(marioKart, sellerRate <= 1000 & totalPr <= 100), aes(x = sellerRate, y = totalPr)) + geom_point(aes(color = cond, shape = cond)) + stat_smooth(method=lm)
ggplot(filter(marioKart), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price") + facet_grid(facets = cond ~ .)
ggplot(filter(marioKart, cond == "new"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart, cond == "used"), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price")
ggplot(filter(marioKart), aes(fill = shipSp)) +
geom_histogram(aes(x=totalPr, weights=totalPr), bins = 5, position="dodge") +
ylab("Total price") + facet_grid(facets = cond ~ .)
