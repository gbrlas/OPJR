# (domenom smatramo dio adrese iza znaka `@`)
str_extract(adrese, "@.*") %>% str_replace("@", "") %>% unlist %>% unique
# anonomizirajte gornje adrese: niz znakova ispred znaka '@'
# zamijenite nasumičnim šesteroznamenkastim prirodnim brojem
str_replace_all(adrese, ".+?(?=@)", as.character(round(runif(length(adrese),100000,999999))))
teskt %>% str_replace("[[:punct:]]", "")
It had a perfectly round door like a porthole, painted green, with a shiny
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
tekst %>% str_replace("[[:punct:]]", "")
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
dirty, wet hole, filled with the ends of worms and an oozy smell, nor
yet a dry, bare, sandy hole with nothing in it to sit down on or to eat;
it was a hobbit-hole, and that means comfort.
It had a perfectly round door like a porthole, painted green, with a shiny
yellow brass knob in the exact middle. The door opened on to a tube-shaped hall
like a tunnel: a very comfortable tunnel without smoke, with paneled walls, and
floors tiled and carpeted, provided with polished chairs, and lots and lots
of pegs for hats and coats – the hobbit was fond of visitors. The tunnel wound
on and on, going fairly but not quite straight into the side of the hill – The
Hill, as all the people for many miles round called it – and many little round
doors opened out of it, first on one side and then on another. No going upstairs
for the hobbit: bedrooms, bathrooms, cellars, pantries (lots of these),
wardrobes (he had whole rooms devoted to clothes), kitchens, dining-rooms,
all were on the same floor, and indeed on the same passage. The best rooms
were all on the left-hand side (going in), for these were the only ones to have
windows, deep-set round windows looking over his garden, and meadows beyond,
sloping down to the river."
tekst %>% str_replace("[[:punct:]]", "")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space]")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]") %>% which(length() >= 3)
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]") %>% .(length() >= 3)
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
temp_tekst <- temp_tekst[length(temp_tekst) >= 3]
temp_tekst
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
temp_tekst <- temp_tekst[length(temp_tekst) >= 3]
temp_tekst
temp_tekst[length(temp_tekst) >= 3]
length(temp_tekst)
temp_tekst
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
dirty, wet hole, filled with the ends of worms and an oozy smell, nor
yet a dry, bare, sandy hole with nothing in it to sit down on or to eat;
it was a hobbit-hole, and that means comfort.
It had a perfectly round door like a porthole, painted green, with a shiny
yellow brass knob in the exact middle. The door opened on to a tube-shaped hall
like a tunnel: a very comfortable tunnel without smoke, with paneled walls, and
floors tiled and carpeted, provided with polished chairs, and lots and lots
of pegs for hats and coats – the hobbit was fond of visitors. The tunnel wound
on and on, going fairly but not quite straight into the side of the hill – The
Hill, as all the people for many miles round called it – and many little round
doors opened out of it, first on one side and then on another. No going upstairs
for the hobbit: bedrooms, bathrooms, cellars, pantries (lots of these),
wardrobes (he had whole rooms devoted to clothes), kitchens, dining-rooms,
all were on the same floor, and indeed on the same passage. The best rooms
were all on the left-hand side (going in), for these were the only ones to have
windows, deep-set round windows looking over his garden, and meadows beyond,
sloping down to the river."
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
temp_tekst
length(temp_tekst)
lapply(temp_tekst, length)
temp_tekst
sapply(temp_tekst, length)
temp_tekst
str_detect(temp_tekst, "...+")
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]") %>% str_detect("...+")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]") %>% str_detect("...+")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]") %>% c %>% str_detect("...+")
tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
dirty, wet hole, filled with the ends of worms and an oozy smell, nor
yet a dry, bare, sandy hole with nothing in it to sit down on or to eat;
it was a hobbit-hole, and that means comfort.
It had a perfectly round door like a porthole, painted green, with a shiny
yellow brass knob in the exact middle. The door opened on to a tube-shaped hall
like a tunnel: a very comfortable tunnel without smoke, with paneled walls, and
floors tiled and carpeted, provided with polished chairs, and lots and lots
of pegs for hats and coats – the hobbit was fond of visitors. The tunnel wound
on and on, going fairly but not quite straight into the side of the hill – The
Hill, as all the people for many miles round called it – and many little round
doors opened out of it, first on one side and then on another. No going upstairs
for the hobbit: bedrooms, bathrooms, cellars, pantries (lots of these),
wardrobes (he had whole rooms devoted to clothes), kitchens, dining-rooms,
all were on the same floor, and indeed on the same passage. The best rooms
were all on the left-hand side (going in), for these were the only ones to have
windows, deep-set round windows looking over his garden, and meadows beyond,
sloping down to the river."
# pronađite najčešće riječi u gornjem tekstu korištenjem sljedeće procedure
# - uklonite interpunkcijske znakove iz teksta
# - rastavite tekst na riječi po praznimama
# - izbacite riječi od samo jednog ili dva znaka
# - izbacite riječi 'the' i 'The'
# - uz pomoć funkcije table izračunajte frekvenciju pojedinih riječi
# - izbacite riječi koje se pojavljuju samo jedan put
# - sortirajte rezultat uz pomoć funkcije sort
# - ispišite konačni rezultat na zaslon
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
temp_tekst
temp_tekst[0
temp_tekst[0]
temp_tekst[0]
temp_tekst[0][0]
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]")
temp_tekst[0][0]
temp_tekst <- tekst %>% str_replace_all("[[:punct:]]", "") %>% str_replace_all("\n", "") %>% str_split("[:space:]") %>% unlist -> rez
rez <- rez[str_length(rez) > 2]
retz <- rez[rez != "the" && rez != "The"]
rez <- rez[str_length(rez) > 2]
rez <- rez[rez != "the" && rez != "The"]
rez
table(rez)
setwd("~/Documents/III_Semestar/R")
rm(list = ls())
library(tidyverse)
library(stringr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = 'hold')
Sys.Date()
as.Date('1986-12-27')
# ispišite današnji datum
Sys.Date()
# pretvorite sljedeće znakovne nizove u objekt tipa `Date` i ispišite rezultat na zaslon:
# '1986-12-27','2016-31-05', '17. 10. 2015.', '01#01#2001'
as.Date('1986-12-27')
as.Date('2016-31-05')
as.Date('1986-12-27')
as.Date('2016-31-05')
as.Date('2016-31-05', '%Y-%m-%d')
as.Date('2016-31-05', "%Y-%d-%m"")
as.Date('17. 10. 2015.')
as.Date('01#01#2001')
as.Date('1986-12-27')
as.Date('2016-31-05', "%Y-%d-%m"")
as.Date('2016-31-05', "%Y-%d-%m")
as.Date('17. 10. 2015.', "%d. %m. %Y.")
as.Date('01#01#2001', "%d#%m#%Y")
# ispišite današnji datum
Sys.Date()
# pretvorite sljedeće znakovne nizove u objekt tipa `Date` i ispišite rezultat na zaslon:
# '1986-12-27','2016-31-05', '17. 10. 2015.', '01#01#2001'
as.Date('1986-12-27')
as.Date('2016-31-05', "%Y-%d-%m")
as.Date('17. 10. 2015.', "%d. %m. %Y.")
as.Date('01#01#2001', "%d#%m#%Y")
Sys.Date() - 1000
as.Date("28.2.2015.", "%d.%m.%Y.") + 1
# ispišite koji je datum bio 1000 dana prije današnjeg datuma
Sys.Date() - 1000
# dodajte jedan dan datumima 28.2.2015. i 28.2.2016 i ispišite rezultat
as.Date("28.2.2015.", "%d.%m.%Y.") + 1
as.Date("28.2.2016.", "%d.%m.%Y.") + 1
# ispišite koliko je dana prošlo od 1.1.2000. do danas
Sys.Date() - as.Date("1.1.2000.", "%d.%m.%Y.")
difftime(time1 = "2016-03-01", "2015-03-01", units = "weeks")
difftime(time1 = Sys.Date(), "2015-03-01", units = "hours")
# Koliko je prošlo tjedana između 1.3.2016. i 1.3.2015.?
# koristite funkciju `difftime`
# NAPOMENA: ne morate eksplicitno pozvati funkciju `as.Date`, funkcija `difftime`
#       će to sama učiniti ako pošaljete datum u default-nom obliku
difftime(time1 = "2016-03-01", "2015-03-01", units = "weeks")
# koliko je prošlo sati od 1.3.2015. do danas?
difftime(time1 = Sys.Date(), "2015-03-01", units = "hours")
seq("2010-01-01", "2030-01-01", by = "6 months")
seq(as.Date("2010-01-01"), as.Date("2030-01-01"), by = "6 months")
stanovi <- data.frame(broj_stana = 1:10,
prezime = c("Ebert", "Ladovac", "Cerić", "Dikla", "Anić",
"Perić", "Žužić", "Babić", "Ibiz", "Radler"))
stanovi
seq(Sys.Date(), by = "3 weeks", along.with = stanovi$broj_stana) %>% as.character() -> stanovi$ciscenje
stanovi
Sys.time()
as.POSIXct(x = "2015-10-28 15:30:42", )
as.POSIXct(x = "01-12-2001 14:30", "%d-%m-%Y %h:%m")
as.POSIXct(x = "01-12-2001 14:30", ... = "%d-%m-%Y %h:%m")
as.POSIXct(x = "01-12-2001 14:30", tz="EST", "%d-%m-%Y %h:%m")
as.POSIXct(x = "01-12-2001 14:30", tz="EST", format = "%d-%m-%Y %h:%m")
as.POSIXct("01-12-2001 14:30", tz = "EST", format = "%d-%m-%Y %H:%M")
# ispišite trenutni datum i  vrijeme
Sys.time()
# pretvorite sljedeće znakovne nizove u vremenske oznake i ispišite ih na zaslon:
# "2015-10-28 15:30:42"
# "01-12-2001 14:30"   <-- oznaka očitana u New York-u, SAD, vremenska zona EST
as.POSIXct(x = "2015-10-28 15:30:42")
as.POSIXct("01-12-2001 14:30", tz = "EST", format = "%d-%m-%Y %H:%M")
# ispišite trenutni datum i  vrijeme
Sys.time()
# pretvorite sljedeće znakovne nizove u vremenske oznake i ispišite ih na zaslon:
# "2015-10-28 15:30:42"
# "01-12-2001 14:30"   <-- oznaka očitana u New York-u, SAD, vremenska zona EST
as.POSIXct(x = "2015-10-28 15:30:42", tz = "GMT")
as.POSIXct("01-12-2001 14:30", tz = "EST", format = "%d-%m-%Y %H:%M")
# ispišite trenutni datum i  vrijeme
Sys.time()
# pretvorite sljedeće znakovne nizove u vremenske oznake i ispišite ih na zaslon:
# "2015-10-28 15:30:42"
# "01-12-2001 14:30"   <-- oznaka očitana u New York-u, SAD, vremenska zona EST
as.POSIXct("01-12-2001 14:30", tz = "EST", format = "%d-%m-%Y %H:%M")
# ispišite trenutni datum i  vrijeme
Sys.time()
# pretvorite sljedeće znakovne nizove u vremenske oznake i ispišite ih na zaslon:
# "2015-10-28 15:30:42"
# "01-12-2001 14:30"   <-- oznaka očitana u New York-u, SAD, vremenska zona EST
as.POSIXct(x = "2015-10-28 15:30:42")
as.POSIXct("01-12-2001 14:30", tz = "EST", format = "%d-%m-%Y %H:%M")
Sys.timezone()
# ispišite trenutnu vremensku zonu
Sys.timezone()
# ispišite 10 nasumično odabranih oznaka vremenskih zona instaliranih na trenutnoj platformi
sample(OlsonNames(), 10)
# ispišite trenutnu vremensku zonu
Sys.timezone()
# ispišite 10 nasumično odabranih oznaka vremenskih zona instaliranih na trenutnoj platformi
sample(OlsonNames(), 10)
Sys.time() + 1000
# ispišite koje će biti vrijeme 1000 sekundi od ovog trenutka
Sys.time() + 1000
# ispišite koliko je prošlo sati od ponoći 1.1.2015. do sad
difftime(Sys.time(), "2015-01-01 00:00:00", units = "hours")
# pretvorite sljedeći znakovni niz u vremensku oznaku tipa `POSIXlt`
# pohranite rezultat u varijablu `t_long`
# "1.5.2013 13:35"
t_long <- as.POSIXlt(x = "1.5.2013 13:35")
t_long <- as.POSIXlt(x = "2013-05-01 13:35:00")
t_long
t_long <- as.POSIXlt("1.5.2013 13:35", format = "%d.%m.%Y %H:%M")
t_long
t_long$hour
t_long$min
t_long %>% unclass() %>% unlist()
# pretvorite sljedeći znakovni niz u vremensku oznaku tipa `POSIXlt`
# pohranite rezultat u varijablu `t_long`
# "1.5.2013 13:35"
t_long <- as.POSIXlt("1.5.2013 13:35", format = "%d.%m.%Y %H:%M")
t_long
# ispišite broj sati i broj minuta vremenske oznake `t_long`
# ispisom njenih atributa naziva `hour` i `min`
t_long$hour
t_long$min
# pretvorite varijablu `t_long` u znakovni vektor i ispišite rezultat
# obavite sve u jednoj naredbi uz pomoć operatora %>%
t_long  %>% unlist()
# pretvorite sljedeći znakovni niz u vremensku oznaku tipa `POSIXlt`
# pohranite rezultat u varijablu `t_long`
# "1.5.2013 13:35"
t_long <- as.POSIXlt("1.5.2013 13:35", format = "%d.%m.%Y %H:%M")
t_long
# ispišite broj sati i broj minuta vremenske oznake `t_long`
# ispisom njenih atributa naziva `hour` i `min`
t_long$hour
t_long$min
# pretvorite varijablu `t_long` u znakovni vektor i ispišite rezultat
# obavite sve u jednoj naredbi uz pomoć operatora %>%
t_long %>% unlist()
# pretvorite sljedeći znakovni niz u vremensku oznaku tipa `POSIXlt`
# pohranite rezultat u varijablu `t_long`
# "1.5.2013 13:35"
t_long <- as.POSIXlt("1.5.2013 13:35", format = "%d.%m.%Y %H:%M")
t_long
# ispišite broj sati i broj minuta vremenske oznake `t_long`
# ispisom njenih atributa naziva `hour` i `min`
t_long$hour
t_long$min
# pretvorite varijablu `t_long` u znakovni vektor i ispišite rezultat
# obavite sve u jednoj naredbi uz pomoć operatora %>%
t_long %>% unclass() %>% unlist()
# pretvorite sljedeći znakovni niz u vremensku oznaku tipa `POSIXlt`
# pohranite rezultat u varijablu `t_long`
# "1.5.2013 13:35"
t_long <- as.POSIXlt("1.5.2013 13:35", format = "%d.%m.%Y %H:%M")
t_long
# ispišite broj sati i broj minuta vremenske oznake `t_long`
# ispisom njenih atributa naziva `hour` i `min`
t_long$hour
t_long$min
# pretvorite varijablu `t_long` u znakovni vektor i ispišite rezultat
# obavite sve u jednoj naredbi uz pomoć operatora %>%
t_long %>% unlist()
library(lubridate)
ymd("2016-07-31")
dmy("28.2.1983.")
dmy("07#31#1996")
dmy("07#31#1996", "%d#%m#%Y")
mdy("07#31#1996", "%d#%m#%Y")
mdy("07#31#1996")
ymd("20010830")
library(lubridate)
# koristeći se funkcijama iz paketa `lubridate`
# parsirajte  u datume i ispišite sljedeće znakovne nizove
#  "2016-07-31"
#  "28.2.1983."
#  "07#31#1996"
#  "20010830"
ymd("2016-07-31")
dmy("28.2.1983.")
mdy("07#31#1996")
ymd("20010830")
dmy_hm("17.5.1977. 10:15pm")
dmy_hms("20160429 10.05.17")
# koristeći se funkcijama iz paketa `lubridate`
# parsirajte u vremenske oznake i ispišite sljedeće znakovne nizove
# "17.5.1977. 10:15pm"
# "20160429 10.05.17"
dmy_hm("17.5.1977. 10:15pm")
dmy_hms("20160429 10.05.17")
# koristeći se funkcijama iz paketa `lubridate`
# parsirajte u vremenske oznake i ispišite sljedeće znakovne nizove
# "17.5.1977. 10:15pm"
# "20160429 10.05.17"
dmy_hm("17.5.1977. 10:15pm")
ymd_hms("20160429 10.05.17")
hour(x)
x <- dmy_hms("19.7.1996. 16:15:27")
hour(x)
x <- dmy_hms("19.7.1996. 16:15:27")
# iz gornje vremenske oznake izvucite i ispišite sate i minute
hour(x)
minute(x)
# postavite godinu gornje vremenske oznake na 2011., a mjesec na lipanj
# ispišite `x`
x <- dmy_hms("19.7.1996. 16:15:27")
# iz gornje vremenske oznake izvucite i ispišite sate i minute
hour(x)
minute(x)
# postavite godinu gornje vremenske oznake na 2011., a mjesec na lipanj
year(x) <- 2011
month(x) <- 6
# ispišite `x`
x
today() + 1
hours(now) - 1
hours(now()) - 1
now()
now() - 60*60
weeks(3)
dweeks(3)
# ispišite trajanje i period od 3 tjedna
weeks(3)
dweeks(3)
# u varijablu `v` upišite period od 5 godina, 3 mjeseca i 2 dana
# dodajte gornji period današnjem datumu
v <- years(5) + months(3) + days(2)
# ispišite trajanje i period od 3 tjedna
weeks(3)
dweeks(3)
# u varijablu `v` upišite period od 5 godina, 3 mjeseca i 2 dana
v <- years(5) + months(3) + days(2)
# dodajte gornji period današnjem datumu
today() + v
interval1 <- interval(today() - months(3), today() + months(3))
interval1 <- as.interval(months(4) + weeks(3) + days(2), today())
# stvorite varijablu `interval1` koja će pohraniti interval od 6 mjeseci prije današnjeg dana
# do 6 mjeseci iza današnjeg dana
interval1 <- interval(today() - months(3), today() + months(3))
# stvorite varijablu `interval2` koja će pohraniti interval od današnjeg dana
# do datuma koji će se dogoditi za 6 mjeseci, 3 tjedna i 2 dana
interval2 <- as.interval(months(4) + weeks(3) + days(2), today())
# stvorite varijablu `interval3` koja će pohraniti interval
# od 1.5.2002. do 1.7.2002.
# ispišite sva tri intervala
# stvorite varijablu `interval1` koja će pohraniti interval od 6 mjeseci prije današnjeg dana
# do 6 mjeseci iza današnjeg dana
interval1 <- interval(today() - months(3), today() + months(3))
# stvorite varijablu `interval2` koja će pohraniti interval od današnjeg dana
# do datuma koji će se dogoditi za 6 mjeseci, 3 tjedna i 2 dana
interval2 <- as.interval(months(4) + weeks(3) + days(2), today())
# stvorite varijablu `interval3` koja će pohraniti interval
# od 1.5.2002. do 1.7.2002.
interval3 <- interval(dmy("1.5.2002."), dmy("1.7.2002."))
# ispišite sva tri intervala
# stvorite varijablu `interval1` koja će pohraniti interval od 6 mjeseci prije današnjeg dana
# do 6 mjeseci iza današnjeg dana
interval1 <- interval(today() - months(3), today() + months(3))
# stvorite varijablu `interval2` koja će pohraniti interval od današnjeg dana
# do datuma koji će se dogoditi za 6 mjeseci, 3 tjedna i 2 dana
interval2 <- as.interval(months(4) + weeks(3) + days(2), today())
# stvorite varijablu `interval3` koja će pohraniti interval
# od 1.5.2002. do 1.7.2002.
interval3 <- interval(dmy("1.5.2002."), dmy("1.7.2002."))
# ispišite sva tri intervala
interval1
interval2
interval3
today() %within% interval1
# provjerite da li je današnji dan unutar intervala definiranog varijablom `interval1`
today() %within% interval1
# ukoliko se `interval1` i `interval2` preklapaju
# ispišite njihov presjek
if (int_overlaps(interval1, interval2)) {
intersect(interval1, interval2)
}
tekst <- "In a hole in the ground there lived a hobbit. Not a nasty,
dirty, wet hole, filled with the ends of worms and an oozy smell, nor
yet a dry, bare, sandy hole with nothing in it to sit down on or to eat;
it was a hobbit-hole, and that means comfort.
It had a perfectly round door like a porthole, painted green, with a shiny
yellow brass knob in the exact middle. The door opened on to a tube-shaped hall
like a tunnel: a very comfortable tunnel without smoke, with paneled walls, and
floors tiled and carpeted, provided with polished chairs, and lots and lots
of pegs for hats and coats – the hobbit was fond of visitors. The tunnel wound
on and on, going fairly but not quite straight into the side of the hill – The
Hill, as all the people for many miles round called it – and many little round
doors opened out of it, first on one side and then on another. No going upstairs
for the hobbit: bedrooms, bathrooms, cellars, pantries (lots of these),
wardrobes (he had whole rooms devoted to clothes), kitchens, dining-rooms,
all were on the same floor, and indeed on the same passage. The best rooms
were all on the left-hand side (going in), for these were the only ones to have
windows, deep-set round windows looking over his garden, and meadows beyond,
sloping down to the river."
# pronađite najčešće riječi u gornjem tekstu korištenjem sljedeće procedure
# - uklonite interpunkcijske znakove iz teksta
# - rastavite tekst na riječi po praznimama
# - izbacite riječi od samo jednog ili dva znaka
# - izbacite riječi 'the' i 'The'
# - uz pomoć funkcije table izračunajte frekvenciju pojedinih riječi
# - izbacite riječi koje se pojavljuju samo jedan put
# - sortirajte rezultat uz pomoć funkcije sort
# - ispišite konačni rezultat na zaslon
str_replace_all(tekst, '[:punct:]', '') %>% str_split('[:space:]') %>% unlist() -> rez
rez <- rez[str_length(rez) > 2]
rez <- rez[rez != 'The' & rez != 'the']
rez <- table(rez)
rez <- rez[rez > 1]
sort(rez, decreasing = T)
knitr::opts_chunk$set(echo = TRUE)
library("lubridate")
library("stringr")
crimes <- read.csv('crimeSample.csv',as.is=TRUE)
crimes <- read.csv('crimeSample.csv',as.is=TRUE)
str(crimes)
head(crimes)
crimes <- read.csv('crimeSample.csv',as.is=TRUE)
str(crimes)
head(crimes)
crimes$Dispatch_Date_Time <- as.POSIXct(df$Dispatch_Date_Time, format="%Y-%m-%d %H:%M:%S")
crimes <- read.csv('crimeSample.csv',as.is=TRUE)
str(crimes)
head(crimes)
crimes$Dispatch_Date_Time <- as.POSIXct(crimes$Dispatch_Date_Time, format="%Y-%m-%d %H:%M:%S")
crimes <- read.csv('crimeSample.csv',as.is=TRUE)
str(crimes)
head(crimes)
crimes$Dispatch_Date_Time <- as.POSIXct(crimes$Dispatch_Date_Time, format="%Y-%m-%d %H:%M:%S")
crimes
crimes$Year <- year(crimes$Dispatch_Date_Time)
crimes$Month <- month(crimes$Dispatch_Date_Time)
crimes$Hour <- hour(crimes$Dispatch_Date_Time)
"Najopasniji mjesec je "
sort(table(month(df$Dispatch_Date_Time)),decreasing = T)[1]
crimes$Year <- year(crimes$Dispatch_Date_Time)
crimes$Month <- month(crimes$Dispatch_Date_Time)
crimes$Hour <- hour(crimes$Dispatch_Date_Time)
"Najopasniji mjesec je "
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1]
"Najopasniji sat u danu je "
sort(table(hour(crimes$Dispatch_Date_Time)),decreasing = T)[1]
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1]
paste("Najopasniji mjesec:", sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1])
crimes$Year <- year(crimes$Dispatch_Date_Time)
crimes$Month <- month(crimes$Dispatch_Date_Time)
crimes$Hour <- hour(crimes$Dispatch_Date_Time)
paste("Najopasniji mjesec:", sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1])
paste("Najopasniji sat:", sort(table(hour(crimes$Dispatch_Date_Time)),decreasing = T)[1])
paste("Najopasniji sat:", sort(table(hour(crimes$Dispatch_Date_Time)),decreasing = T)[0])
paste("Najopasniji mjesec:", sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[0])
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[0]
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1]
crimes$Year <- year(crimes$Dispatch_Date_Time)
crimes$Month <- month(crimes$Dispatch_Date_Time)
crimes$Hour <- hour(crimes$Dispatch_Date_Time)
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1]
sort(table(hour(crimes$Dispatch_Date_Time)),decreasing = T)[1]
crimes$Year <- year(crimes$Dispatch_Date_Time)
crimes$Month <- month(crimes$Dispatch_Date_Time)
crimes$Hour <- hour(crimes$Dispatch_Date_Time)
print("Najopasniji mjesec:")
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1]
print("\nNajopasniji sat:")
sort(table(hour(crimes$Dispatch_Date_Time)),decreasing = T)[1]
crimes$Year <- year(crimes$Dispatch_Date_Time)
crimes$Month <- month(crimes$Dispatch_Date_Time)
crimes$Hour <- hour(crimes$Dispatch_Date_Time)
print("Najopasniji mjesec:")
sort(table(month(crimes$Dispatch_Date_Time)),decreasing = T)[1]
print("Najopasniji sat:")
sort(table(hour(crimes$Dispatch_Date_Time)),decreasing = T)[1]
"Burglary or robbery"
paste((sum(str_detect(tolower(crimes$Text_General_Code),'burglary|robbery'))*100)/ length(crimes$Text_General_Code), "%")
"Burglary or robbery"
paste((sum(str_detect(tolower(crimes$Text_General_Code),'burglary|robbery'))*100)/ length(crimes$Text_General_Code), "%")
paste("Burglary or robbery:"(sum(str_detect(tolower(crimes$Text_General_Code),'burglary|robbery'))*100)/ length(crimes$Text_General_Code), "%")
paste("Burglary or robbery:", (sum(str_detect(tolower(crimes$Text_General_Code),'burglary|robbery'))*100)/ length(crimes$Text_General_Code), "%")
ulice <- str_extract_all(crimes$Location_Block,"\\b[[:digit:]]{4}\\b")
ulice <- unique(lista)
ulice <- str_extract_all(crimes$Location_Block,"\\b[[:digit:]]{4}\\b")
ulice <- unique(ulice)
sort(unique(unlist(ulice, use.names = FALSE)))
numbers <- str_extract_all(crimes$Location_Block,"\\b[[:digit:]]{4}\\b")
numbers <- unique(numbers)
sort(unique(unlist(numbers, use.names = FALSE)))
crimes$Dispatch_Date_Time <- as.POSIXct(crimes$Dispatch_Date_Time, format="%Y-%m-%d %H:%M:%S")
head(crimes)
