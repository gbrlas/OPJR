# provjerite njegov tip
class(svastara[1])
# ispišite prvi element liste svastara
svastara[1]
# provjerite njegov tip
class(svastara[1])
# ispišite prvi element liste svastara korištenjem  operatora `[[`
svastara[[1]]
# provjerite njegov tip
class(svastara[[1<]])
# ispišite prvi element liste svastara korištenjem  operatora `[[`
svastara[[1]]
# provjerite njegov tip
class(svastara[[1]])
# ispišite prvi element liste svastara korištenjem  operatora `[[`
svastara[[1]]
# provjerite njegov tip
class(svastara[[1]])
# ispišite prvi element liste svastara
svastara[1]
# provjerite njegov tip
typeof(svastara[1])
# ispišite prvi element liste svastara korištenjem  operatora `[[`
svastara[[1]]
# provjerite njegov tip
typeof(svastara[[1]])
# ispišite element naziva "slova" liste svastara
# korištenjem operatora `[[`
svastara[["slova"]]
# ispišite isti element korištenjem operatora `$`
# ispišite element naziva "slova" liste svastara
# korištenjem operatora `[[`
svastara[["slova"]]
# ispišite isti element korištenjem operatora `$`
svastara$slova
# listi `svastara` dodajte element `parniBrojevi` koji sadrži
# sve parne brojeve od 1 do 100
svastara$parniBrojevi <- seq(0, 101, 2)
svastara
# obrišite treći element liste
# ispišite listu `svastara`
# listi `svastara` dodajte element `parniBrojevi` koji sadrži
# sve parne brojeve od 1 do 100
svastara$parniBrojevi <- seq(0, 101, 2)
svastara
# obrišite treći element liste
svastara[3] <- NULL
# ispišite listu `svastara`
svastara
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(readxl)
library(ggplot2)
library(plyr)
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(readxl)
library(ggplot2)
library(plyr)
kpis <- read_excel("2017_10_Junior Data Analyst.xlsx", sheet="KPIs")
installs <- read_excel("2017_10_Junior Data Analyst.xlsx", sheet="Installs")
daily_active <- read_excel("2017_10_Junior Data Analyst.xlsx", sheet="Daily Active Users")
revenue <- read_excel("2017_10_Junior Data Analyst.xlsx", sheet="Revenue")
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
ggplot(installs_df, aes(Date,value)) + geom_line(aes(colour = series))
View(installs_df)
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
rename(installs_df, c("value"="revenue"))
ggplot(installs_df, aes(Date,revenue)) + geom_line(aes(colour = series))
View(installs_df)
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
rename(installs_df, c("value"="revenue"))
ggplot(installs_df, aes(Date,value)) + geom_line(aes(colour = series))
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
installs_df <- rename(installs_df, c("value"="revenue"))
View(installs_df)
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
installs_df <- rename(installs_df, c("value"="revenue"))
ggplot(installs_df, aes(Date,revenue)) + geom_line(aes(colour = series))
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
installs_df <- rename(installs_df, c("value"="installs"))
ggplot(installs_df, aes(Date,installs)) + geom_line(aes(colour = series))
installs_df <- data.frame(installs)
installs_df <- melt(installs_df, id.vars = 'Date', variable.name = 'series')
installs_df <- rename(installs_df, c("value"="installs"))
ggplot(installs_df, aes(Date,installs)) + geom_line(aes(colour = series))
ggplot(installs_df[which(installs_df$series %in% c("China", "Vietnam")), ],
aes(Date,revenue)) + geom_line(aes(colour = series))
View(installs_df)
ggplot(installs_df[which(installs_df$series %in% c("China", "Vietnam")), ],
aes(Date,installs)) + geom_line(aes(colour = series))
revenue_df <- data.frame(revenue)
revenue_df <- melt(revenue_df, id.vars = 'Date', variable.name = 'series')
revenue_df <- rename(revenue_df, c("value"="revenue"))
ggplot(revenue_df, aes(Date,revenue)) + geom_line(aes(colour = series))
ggplot(revenue_df[which(revenue_df$series %in% c("China", "Japan")), ],
aes(Date,revenue)) + geom_line(aes(colour = series))
daily_active_df <- data.frame(daily_active)
daily_active_df <- melt(daily_active_df,id.vars = 'Date', variable.name = 'series')
revenue_df <- rename(revenue_df, c("value"="daily_users"))
ggplot(daily_active_df, aes(Date,daily_users)) + geom_line(aes(colour = series))
daily_active_df <- data.frame(daily_active)
daily_active_df <- melt(daily_active_df,id.vars = 'Date', variable.name = 'series')
daily_active_df <- rename(revenue_df, c("value"="daily_users"))
ggplot(daily_active_df, aes(Date,daily_users)) + geom_line(aes(colour = series))
daily_active_df <- data.frame(daily_active)
daily_active_df <- melt(daily_active_df,id.vars = 'Date', variable.name = 'series')
daily_active_df <- rename(revenue_df, c("value"="daily_users"))
View(daily_active_df)
daily_active_df <- data.frame(daily_active)
daily_active_df <- melt(daily_active_df,id.vars = 'Date', variable.name = 'series')
daily_active_df <- rename(daily_active_df, c("value"="daily_users"))
ggplot(daily_active_df, aes(Date,daily_users)) + geom_line(aes(colour = series))
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
a <- seq(11, 100)
a
a <- seq(11, 99)
a
a <- seq(11, 99)
b <- rep(0, times=100)
b
a <- seq(11, 99)
b <- rep(0, times=100)
c <- seq(0, 1, 0.1)
c
nums <- seq(101, 1001)
nums <- nums[nums %% 10 != 0]
nums
nums <- seq(101, 1001)
nums <- nums[nums %% 10 != 0]
sum(nums)
m_inv <- solve(m)
# stvaramo matricu 3x3 nasumično odabranih elemenata iz skupa od 1 do 100
set.seed(1234)
m <- matrix(c(sample(1:100, 9, T)), nrow = 3, ncol = 3, byrow = T)
m_inv <- solve(m)
m_inv <- solve(m)
m_inv
m_inv <- solve(m)
m %*% m_inv
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara$imena <- append(svastara$imena, "Pero")
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara$imena <- append(svastara$imena, "Pero")
svastara$imena
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara$imena <- append(svastara$imena, "Pero")
4 %in% svastara[1]
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara$imena <- append(svastara$imena, "Pero")
4 %in% svastara[1]
svastara$novi <- list(a = 1:3, b = 1:3, c = 1:3)
svastara
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
cat("-------")
svastara$slova[3]
cat("-------")
length(svastara$imena)
cat("-------")
svastara$imena <- append(svastara$imena, "Pero")
4 %in% svastara[1]
cat("-------")
svastara$novi <- list(a = 1:3, b = 1:3, c = 1:3)
svastara
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
print("-------")
svastara$slova[3]
print("-------")
length(svastara$imena)
print("-------")
svastara$imena <- append(svastara$imena, "Pero")
4 %in% svastara[1]
print("-------")
svastara$novi <- list(a = 1:3, b = 1:3, c = 1:3)
svastara
knitr::opts_chunk$set(echo = TRUE)
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara$imena <- append(svastara$imena, "Pero")
4 %in% svastara[1]
svastara$novi <- list(c(1:3), c(1:3), c(1:3))
svastara
svastara <- list(brojevi = 1:3, slova = c("A", "B"), c(T, F), imena = c("Ivo", "Ana"))
class(svastara[2])
svastara$slova[3]
length(svastara$imena)
svastara$imena <- append(svastara$imena, "Pero")
4 %in% svastara[1]
svastara <- append(svastara, list(c(1:3), c(1:3), c(1:3)))
svastara
str(svastara)
setwd("~/Documents/R")
knitr::opts_chunk$set(results = 'hold')
rm(list = ls())    # brišemo postojeće varijable kako bi krenuli od nule
load("MI_predlozak_podaci.rda")
print(a[1:10])
apply(b, 2, class)
apply(b, 1, class)
apply(b, 2, class)
set.seed(1234)
v <- sample(1:100, 1000, replace = T)
print(sum(v %% 7 == 0))
setwd("~/Documents/III_Semestar/R")
knitr::opts_chunk$set(results = 'hold')
a <- seq(1000, 0, 0.5)
a <- seq(1000, 0, 0.5)
a <- range(1000, 0, 0.5)
a
seq?
1000, 0, 0.5)
seq?
a
seq?
1000, 0, 0.5)
?seq
a <- reverse(range(0, 1000, 0.5))
a <- rev(range(0, 1000, 0.5))
a
a <- rev(seq(0, 1000, 0.5))
a
b <- c(rep(T, 200))
b <- c(rep(T, 200), c(rep(F, 200), rep(c(T, F), 50)))
b
b <- c(rep(T, 200), c(rep(F, 200), rep(c(T, F), 50)))
m <- diag(100)
View(m)
m[90:100, 90:100]
m[91:100, 91:100]
lista <- list(1:5, seq(2, 20, 4), c("A", "B", "C", "D", "E", "F"))
lista[1] * lista[2]
lista[1]
lista[1]
lista[2]
unlist(lista[1]) * unlist(lista[2])
lista[1]
lista[2]
unlist(lista[1]) * unlist(lista[2])
lista[1]
lista[2]
unlist(lista[1]) * unlist(lista[2])
unlist(lista[1]) * unlist(lista[2])
lista.df <- as.data.frame(lista)
t.f <- factor(t)
t.f <- factor(tlak, levels = c("vrlo hladno", "hladno", "umjereno", "toplo", "vrlo toplo"), order = T)
t.f <- factor(t, levels = c("vrlo hladno", "hladno", "umjereno", "toplo", "vrlo toplo"), order = T)
t <- c("vrlo toplo", "toplo", "hladno", "vrlo hladno", "umjereno", "hladno", "vrlo toplo", "toplo", "vrlo hladno",
"toplo", "toplo", "vrlo toplo")
t.f <- factor(t, levels = c("vrlo hladno", "hladno", "umjereno", "toplo", "vrlo toplo"), order = T)
t.f
sort(t.f)
count(t.f)
library(dplyr)
count(t.f)
table(t.f)
sort(table(t.f))
sort(table(t.f), decreasing = T)
data(quakes)
str(quakes)
dim(quakes)
str(quakes)
dim(quakes)
head(quakes)
tail(quakes)
str(quakes)
summarise(quakes)
summary(quakes)
summary(quakes)["mag"]
summary(quakes)
summary(quakes)
quakes[quakes$depth >= 500]
quakes[quakes$depth >= 500]
where(quakes, quakes$depth >= 500])
where(quakes, quakes$depth >= 500)
quakes[quakes$depth > 100]
quakes[quakes$depth > 100, ]
quakes[quakes$depth >= 500, ]
quakes[quakes$depth >= 500  & quakes$depth <= 600, ]
count(quakes[quakes$depth >= 500  & quakes$depth <= 600, ])
count(quakes[quakes$depth >= 500  & quakes$depth <= 600, ])
count(quakes[quakes$depth >= 500  & quakes$depth <= 600, ])
a <- 1:10
b <- 5:15
base::intersect(a, b)
dplyr::intersect(a, b)
base::intersect(a, b)
dplyr::intersect(a, b)
a <- 1:10
b <- 5:15
base::intersect(a, b)
dplyr::intersect(a, b)
base::intersect(a, b)
dplyr::intersect(a, b)
base::intersect(a, b)
dplyr::intersect(a, b)
podaci <- read.csv("podaci.csv", header = T)
View(podaci)
apply(podaci, 2, sum(is.na()))
na_count <-sapply(podaci, function(y) sum(length(which(is.null(y)))))
na_count <-sapply(podaci, function(y) sum(length(which(is.null(y)))))
na_count
podaci <- read.csv("podaci.csv", header = T, na.strings = "NULL")
na_count <-sapply(podaci, function(y) sum(length(which(is.na(y)))))
na_count
podaci.2 <- as.data.frame(lapply(podaci,
function(x) if (is.numeric(x)) {
if (is.na(x)) {
mean(unlist(x))
} else x
} else x))
podaci.2
na_count2 <-sapply(podaci.2, function(y) sum(length(which(is.na(y)))))
na_count2
apply(podaci, 2, class)
View(podaci)
class(podaci$id) <- "numeric"
na_count <-sapply(podaci, function(y) sum(length(which(is.na(y)))))
na_count
apply(podaci, 2, class)
podaci <- read.csv("podaci.csv", header = T, na.strings = "NULL", colClasses = c("numeric", "character", rep("numeric", 2)))
podaci <- read.csv("podaci.csv", header = T, na.strings = "NULL"))
podaci <- read.csv("podaci.csv", header = T, na.strings = "NULL")
apply(podaci, 2, class)
podaci.2 <- as.data.frame(lapply(podaci,
function(x) if (is.numeric(as.integer(x))) {
if (is.na(x)) {
mean(unlist(x))
} else x
} else x))
na_count2 <-sapply(podaci.2, function(y) sum(length(which(is.na(y)))))
na_count2
is.numeric(as.integer(podaci$tezina[2]))
podaci.2 <- as.data.frame(lapply(podaci,
function(x) if (is.numeric(as.integer(x))) {
if (is.na(x)) {
mean(unlist(x))
} else x
} else x))
podaci.2
podaci.2 <- as.data.frame(lapply(podaci,
lapply(function(x) if (is.numeric(as.integer(x))) {
if (is.na(x)) {
mean(unlist(x))
} else x
} else x)))
podaci.2 <- as.data.frame(lapply(podaci,
lapply(x, function(x) if (is.numeric(as.integer(x))) {
if (is.na(x)) {
mean(unlist(x))
} else x
} else x)))
podaci <- read.csv("podaci.csv", header = T, na.strings = "NULL")
as.numeric(as.character(podaci$id))
as.numeric(as.character(podaci$visina))
as.numeric(as.character(podaci$tezina))
apply(podaci, 2, class)
podaci$id <- as.numeric(as.character(podaci$id))
apply(podaci, 2, class)
podaci$tezina <- as.numeric(as.character(podaci$tezina))
apply(podaci, 2, class)
podaci$id <- as.numeric(as.character(podaci$id))
podaci$visina <- as.numeric(as.character(podaci$visina))
podaci$tezina <- as.numeric(as.character(podaci$tezina))
str(podaci)
na_count <-sapply(podaci, function(y) sum(length(which(is.na(y)))))
na_count
df1[,subset1] <- as.data.frame(lapply(podaci[,columns], function(x) { x[is.na(x)] <- mean(x); x}))
columns <- c("id", "visina", "tezina")
df1<- as.data.frame(lapply(podaci[,columns], function(x) { x[is.na(x)] <- mean(x); x}))
df1
na_count2 <-sapply(df1, function(y) sum(length(which(is.na(y)))))
na_count2
df1<- as.data.frame(lapply(podaci[,columns], function(x) { x[is.na(x)] <- mean(x); x}))
df1
na_count2 <-sapply(df1, function(y) sum(length(which(is.na(y)))))
na_count2
df1
View(df1)
is.numeric(podaci$visina)
podaci.2 <- lapply(podaci, function(x) {
if (is.numeric(x)) {
x[is.na(x)] <- mean(x, na.rm = TRUE)
x
} else {
x
}
})
na_count2 <-sapply(df1, function(y) sum(length(which(is.na(y)))))
na_count2
na_count2 <-sapply(podaci.2, function(y) sum(length(which(is.na(y)))))
na_count2
podaci.2 <- lapply(podaci, function(x) {
if (is.numeric(x)) {
x[is.na(x)] <- mean(x, na.rm = TRUE)
x
} else {
x
}
})
na_count2 <-sapply(podaci.2, function(y) sum(length(which(is.na(y)))))
na_count2
podaci.2 <- as.data.frame(lapply(podaci, function(x) {
if (is.numeric(x)) {
x[is.na(x)] <- mean(x, na.rm = TRUE)
x
} else {
x
}
}))
View(quakes)
View(podaci.2)
View(podaci)
summary(podaci)
rm(list = ls())
knitr::opts_chunk$set(results = 'hold')
library(dplyr)
rm(list = ls())    # brišemo postojeće varijable kako bi krenuli od nule
a <- rev(seq(0, 1000, 0.5))
b <- c(rep(T, 200), c(rep(F, 200), rep(c(T, F), 50)))
a
head(a)
tail(a)
b <- c(rep(T, 200), c(rep(F, 200), rep(c(T, F), 50)))
summmary(b)
knitr::opts_chunk$set(results = 'hold')
library(dplyr)
summary(b)
a <- rev(seq(0, 1000, 0.5))
head(a)
tail(a)
b <- c(rep(T, 200), c(rep(F, 200), rep(c(T, F), 50)))
summary(b)
m
m <- diag(100)
m
View(m)
m[91:100, 91:100]
lista <- list(1:5, seq(2, 20, 4), c("A", "B", "C", "D", "E", "F"))
lista <- list(1:5, seq(2, 20, 4), c("A", "B", "C", "D", "E", "F"))
unlist(lista[1]) * unlist(lista[2])
lista.df <- as.data.frame(lista)
t <- c("vrlo toplo", "toplo", "hladno", "vrlo hladno", "umjereno", "hladno", "vrlo toplo", "toplo", "vrlo hladno",
"toplo", "toplo", "vrlo toplo")
t.f <- factor(t, levels = c("vrlo hladno", "hladno", "umjereno", "toplo", "vrlo toplo"), order = T)
t
t.f
sort(table(t.f), decreasing = T)
data(quakes)
str(quakes)
dim(quakes)
head(quakes)
tail(quakes)
summary(quakes)
count(quakes[quakes$depth >= 500  & quakes$depth <= 600, ])
a <- 1:10
b <- 5:15
base::intersect(a, b)
dplyr::intersect(a, b)
?intersect
?intersect
podaci <- read.csv("podaci.csv", header = T, na.strings = "NULL")
podaci$id <- as.numeric(as.character(podaci$id))
podaci$visina <- as.numeric(as.character(podaci$visina))
podaci$tezina <- as.numeric(as.character(podaci$tezina))
str(podaci)
summary(podaci)
na_count <-sapply(podaci, function(y) sum(length(which(is.na(y)))))
na_count
podaci.2 <- as.data.frame(lapply(podaci, function(x) {
if (is.numeric(x)) {
x[is.na(x)] <- mean(x, na.rm = TRUE)
x
} else {
x
}
}))
na_count2 <-sapply(podaci.2, function(y) sum(length(which(is.na(y)))))
na_count2
View(podaci.2)
str(podaci.2)
rm(list = ls())
